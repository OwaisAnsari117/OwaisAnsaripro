Code :

#include <stdio.h>
#include <string.h>

// Function to find maximum of two numbers
int max(int a, int b) {
    return (a > b) ? a : b;
}

int main() {
    char X[100]; // to store user input string

    printf("Enter a string: ");
    scanf("%s", X);  // input string (e.g., AABBCDC)

    int n = strlen(X);
    int L[n + 1][n + 1]; // DP table

    // Step 1: Build LCS table (variation for LRS)
    for (int i = 0; i <= n; i++) {
        for (int j = 0; j <= n; j++) {
            if (i == 0 || j == 0)
                L[i][j] = 0;
            else if (X[i - 1] == X[j - 1] && i != j)
                L[i][j] = 1 + L[i - 1][j - 1];
            else
                L[i][j] = max(L[i - 1][j], L[i][j - 1]);
        }
    }

    // Step 2: Reconstruct LRS from L table
    int index = L[n][n];
    char lrs[index + 1];
    lrs[index] = '\0'; // null terminator

    int i = n, j = n;
    while (i > 0 && j > 0) {
        if (X[i - 1] == X[j - 1] && i != j) {
            lrs[index - 1] = X[i - 1];
            i--;
            j--;
            index--;
        } else if (L[i - 1][j] > L[i][j - 1]) {
            i--;
        } else {
            j--;
        }
    }

    // Step 3: Print results
    printf("\nThe Longest Repeating Subsequence is: %s\n", lrs);
    printf("Length of LRS is: %d\n", L[n][n]);

    return 0;
}
